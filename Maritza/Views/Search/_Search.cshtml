@model StaticPagedList<dtoSearch>
@using PagedList.Mvc;
@{
    var filters = ViewBag.filters as fltSearch;

}
<div id="ModelList" class="card-body p-3">

    <div class="row g-3 ">
        @if (Model != null)
        {

            foreach (var item in Model)
            {

                <div class="col-4">
                    <div class="card h-100">
                        <img src="@Url.Content(item.UrlImage)" class="object-fit-sm-contain border rounded-top-3" alt="@item.Title">
                        <div class="card-body">
                            <h5 class="card-title">@item.Title</h5>
                            <h5 class="card-title">@item.Budget</h5>
                            <div class="row row-cols-lg-2 row-cols-sm-1 row-cols-xs-1 p-0 g-2">

                                @if (item.lstCharacteristicsModel != null)
                                {
                                    foreach (var characteristic in item.lstCharacteristicsModel)
                                    {

                                        <div class="col">
                                            <label class="w-100 text-center border border-1 border-primary border-opacity-50 rounded-3 p-1 ">@characteristic.Name</label>
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                        <div class="card-footer p-0 bg-transparent">
                            <a href="@Url.Action("ProyectDetails", "Search", new { iId = item.ProyectID })" class="btn btn-primary w-100 rounded-top-0">Detalles</a>
                        </div>
                    </div>
                </div>

            }
        }

        <div>
            <div id="ModelList" class="" data-otf-target="#ModelList">
                @{
                    var vPagedlistRenderOptions = PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(PagedListRenderOptions.ClassicPlusFirstAndLast,
                                   new AjaxOptions()
                                   {
                                       HttpMethod = "GET",
                                       UpdateTargetId = "ModelList",
                                       OnBegin = "ShowLoading()",
                                       OnComplete = "HideLoading()"
                                   });
                    vPagedlistRenderOptions.LiElementClasses = new[] { "page-item" };
                    vPagedlistRenderOptions.UlElementClasses = new[] { "pagination" };
                }
                @Html.PagedListPager(Model, page => Url.Action("Search",
          new
          {
              PageNumber = page,
              Title = filters.Title,
              SortingOrder = filters.SortingOrder
          }), vPagedlistRenderOptions)
            </div>
        </div>
    </div>
</div>
