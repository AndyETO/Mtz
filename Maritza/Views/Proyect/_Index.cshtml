@model PagedList.StaticPagedList<dtoProyects>
@using PagedList.Mvc;
@{
    var filters = ViewBag.Filter as MaritzaData.Filters.fltProyects;
}



<div id="ModelList">
    <div class="table-responsive">
        <table class="table table-striped ">
            <thead>
                <tr>
                    <th>
                        ID
                    </th>
                    <th>
                        Titulo
                    </th>
                    <th>
                        Descripción
                    </th>
                    <th>
                        Comentario
                    </th>
                </tr>
            </thead>
            <tbody>

                @if (Model.Count == 0)
                {
                    <tr>
                        <td>
                            Sin registros
                        </td>
                    </tr>

                }
                else
                {
                    foreach (var element in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(elementItem => element.ProyectID)</td>
                            <td>@Html.DisplayFor(elementItem => element.Title)</td>
                            <td>@Html.DisplayFor(elementItem => element.Description)</td>
                            <td>@Html.DisplayFor(elementItem => element.Comment)</td>
                            <td>
                                <a href="@Url.Action("Details", new {@id=element.ProyectID})" class="">Ver detalles</a>
                            </td>
                        </tr>

                    }
                }
            </tbody>
            <tfoot>
                <tr>

                    @*@{
                        var vPagedlistRenderOptions =
                            PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
                                PagedListRenderOptions.ClassicPlusFirstAndLast,
                                new AjaxOptions()
                                {
                                    HttpMethod = "GET",
                                    UpdateTargetId = "IndexList",
                                    OnBegin = "ShowLoading()",
                                    OnComplete = "HideLoading()"
                                }
                                );
                        vPagedlistRenderOptions.LiElementClasses = new[] { "page-item" };
                        vPagedlistRenderOptions.UlElementClasses = new[] { "pagination" };
                    }*@
                    <td colspan="5">
                        <div id="pagedList" class="" data-otf-target="#IndexList">


                            @*@Html.PagedListPager(Model, page => Url.Action("Index", new

                       {
                           page
                       }), vPagedlistRenderOptions)*@

                            <h3>Custom Wording (<em>Spanish Translation Example</em>)</h3>
                            @Html.PagedListPager(Model, page => Url.Action("Index", new { PageNumber=page }), new PagedListRenderOptions { LinkToFirstPageFormat = "<< Primera", LinkToPreviousPageFormat = "< Anterior", LinkToNextPageFormat = "Siguiente >", LinkToLastPageFormat = "&Uacute;ltima >>" })

                            
                        </div>
                    </td>
                </tr>
            </tfoot>
        </table>
    </div>
</div>
